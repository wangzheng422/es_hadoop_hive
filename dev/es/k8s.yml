apiVersion: v1
kind: Service
metadata:
  annotations:
    loadbalancer.alauda.io/bind: '[{"container_port":9200,"protocol":"tcp","name":"{{NGINX}}","port":9200}]'
  labels:
    service.alauda.io/name: elasticsearch
  name: elasticsearch
  namespace: {{REGION}}
spec:
  ports:
  - port: 9200
    protocol: TCP
    targetPort: 9200
  selector:
    service.alauda.io/name: elasticsearch
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: elasticsearch-cluster
spec:
  clusterIP: None
  ports:
  - port: 9300
    protocol: TCP
    targetPort: 9300
  publishNotReadyAddresses: true
  selector:
    component: elasticsearch
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: {{REGION}}
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: elasticsearch
        component: elasticsearch
    spec:
      containers:
      - env:
        - name: ES_JAVA_OPTS
          value: -Xms512m -Xmx16G
        - name: ALB_IP
          value: {{ALB_IP}}
        name: elasticsearch
        image: 10.11.0.6:5000/es:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "4"
            memory: 16G
        ports:
          - containerPort: 9200
            name: "http"
          - containerPort: 9300
            name: "transport"
        volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "elasticsearch-data"
                readOnly: false
      volumes:
        - hostPath:
            path: /alauda_data/es_data
            type: Directory
          name: "elasticsearch-data"
