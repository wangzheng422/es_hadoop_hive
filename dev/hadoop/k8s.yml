apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: namenode
  namespace: {{REGION}}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: namenode
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: namenode
        component: namenode
    spec:
      containers:
      - env:
        - name: NODE_IPS
          value: "{{NODE_IPS}}"
        - name: NAME_NODE_ADDR
          value: "{{NAME_NODE_ADDR}}"
        - name: NAME_NODE_PORT
          value: "9000"
        - name: SERVER_ROLE
          value: "nn"
        - name: FORMAT_NAMENODE
          value: "true"
        - name: TEST
          value: "true"
        - name: START_YARN
          value: "true"
        name: namenode
        image: {{REGISTRY}}/hadoop:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "2"
            memory: "4G"
        volumeMounts:
          - mountPath: "/data"
            name: "hadoop-data"
            readOnly: false
      volumes:
        - hostPath:
            path: /alauda_data/hadoop_data
            type: Directory
          name: "hadoop-data"
      hostNetwork: true
      nodeSelector:
        hadoop: "nn1"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: datanode1
  namespace: {{REGION}}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: datanode1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: datanode1
        component: datanode1
    spec:
      containers:
      - env:
        - name: NODE_IPS
          value: "{{NODE_IPS}}"
        - name: NAME_NODE_ADDR
          value: "{{NAME_NODE_ADDR}}"
        - name: NAME_NODE_PORT
          value: "9000"
        - name: SERVER_ROLE
          value: "dn"
        - name: START_YARN
          value: "true"
        name: datanode
        image: {{REGISTRY}}/hadoop:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "2"
            memory: 4G
        volumeMounts:
          - mountPath: "/data"
            name: "hadoop-data"
            readOnly: false
      volumes:
        - hostPath:
            path: /alauda_data/hadoop_data
            type: Directory
          name: "hadoop-data"
      hostNetwork: true
      nodeSelector:
        hadoop: "dn1"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: datanode2
  namespace: {{REGION}}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: datanode2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: datanode2
        component: datanode2
    spec:
      containers:
      - env:
        - name: NODE_IPS
          value: "{{NODE_IPS}}"
        - name: NAME_NODE_ADDR
          value: "{{NAME_NODE_ADDR}}"
        - name: NAME_NODE_PORT
          value: "9000"
        - name: SERVER_ROLE
          value: "dn"
        - name: START_YARN
          value: "true"
        name: datanode
        image: {{REGISTRY}}/hadoop:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "2"
            memory: 4G
        volumeMounts:
          - mountPath: "/data"
            name: "hadoop-data"
            readOnly: false
      volumes:
        - hostPath:
            path: /alauda_data/hadoop_data
            type: Directory
          name: "hadoop-data"
      hostNetwork: true
      nodeSelector:
        hadoop: "dn2"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: datanode3
  namespace: {{REGION}}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: datanode3
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: datanode3
        component: datanode3
    spec:
      containers:
      - env:
        - name: NODE_IPS
          value: "{{NODE_IPS}}"
        - name: NAME_NODE_ADDR
          value: "{{NAME_NODE_ADDR}}"
        - name: NAME_NODE_PORT
          value: "9000"
        - name: SERVER_ROLE
          value: "dn"
        - name: START_YARN
          value: "true"
        name: datanode
        image: {{REGISTRY}}/hadoop:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "2"
            memory: 4G
        volumeMounts:
          - mountPath: "/data"
            name: "hadoop-data"
            readOnly: false
      volumes:
        - hostPath:
            path: /alauda_data/hadoop_data
            type: Directory
          name: "hadoop-data"
      hostNetwork: true
      nodeSelector:
        hadoop: "dn3"
